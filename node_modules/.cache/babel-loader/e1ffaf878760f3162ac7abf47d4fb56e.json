{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // @ts-ignore: Could not find a declaration file for module\n\nconst zone_file_1 = require(\"zone-file\");\n\nconst person_1 = require(\"./person\");\n\nconst profileZoneFiles_1 = require(\"../profileZoneFiles\");\n\nconst profileTokens_1 = require(\"../profileTokens\");\n\nconst fetchUtil_1 = require(\"../../fetchUtil\");\n/**\n *\n * @param zoneFile\n * @param publicKeyOrAddress\n * @param callback\n *\n * @ignore\n */\n\n\nfunction resolveZoneFileToPerson(zoneFile, publicKeyOrAddress, callback) {\n  let zoneFileJson = null;\n\n  try {\n    zoneFileJson = zone_file_1.parseZoneFile(zoneFile);\n\n    if (!zoneFileJson.hasOwnProperty('$origin')) {\n      zoneFileJson = null;\n      throw new Error('zone file is missing an origin');\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  let tokenFileUrl = null;\n\n  if (zoneFileJson && Object.keys(zoneFileJson).length > 0) {\n    tokenFileUrl = profileZoneFiles_1.getTokenFileUrl(zoneFileJson);\n  } else {\n    let profile = null;\n\n    try {\n      profile = JSON.parse(zoneFile);\n      const person = person_1.Person.fromLegacyFormat(profile);\n      profile = person.profile();\n    } catch (error) {\n      console.warn(error);\n    }\n\n    callback(profile);\n    return;\n  }\n\n  if (tokenFileUrl) {\n    fetchUtil_1.fetchPrivate(tokenFileUrl).then(response => response.text()).then(responseText => JSON.parse(responseText)).then(responseJson => {\n      const tokenRecords = responseJson;\n      const token = tokenRecords[0].token;\n      const profile = profileTokens_1.extractProfile(token, publicKeyOrAddress);\n      callback(profile);\n    }).catch(error => {\n      console.warn(error);\n    });\n  } else {\n    console.warn('Token file url not found');\n    callback({});\n  }\n}\n\nexports.resolveZoneFileToPerson = resolveZoneFileToPerson;","map":null,"metadata":{},"sourceType":"script"}