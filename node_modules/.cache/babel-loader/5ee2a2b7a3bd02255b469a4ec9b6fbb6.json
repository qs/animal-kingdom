{"ast":null,"code":"\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst protocolEchoDetection_1 = require(\"./auth/protocolEchoDetection\");\n\ntry {\n  /**\n   * Located here so it executes ASAP. The protocol handler detection is designed to work\n   * as a drop-in-replacement (non-breaking upgrade) for apps using blockstack.js. That\n   * requires doing this global and immediate detection.\n   * This function is also called in `isSignInPending` so that web app bundling the\n   * blockstack.js lib in a more modular way will still perform the protocol detection\n   * handling without any changes if this index file is not bundled in.\n   */\n  protocolEchoDetection_1.protocolEchoReplyDetection();\n} catch (error) {\n  console.error(\"Error performing global protocol echo reply detection: \".concat(error));\n}\n\n__export(require(\"./auth\"));\n\n__export(require(\"./profiles\"));\n\n__export(require(\"./storage\"));\n\nvar dids_1 = require(\"./dids\");\n\nexports.makeDIDFromAddress = dids_1.makeDIDFromAddress;\nexports.makeDIDFromPublicKey = dids_1.makeDIDFromPublicKey;\nexports.getDIDType = dids_1.getDIDType;\nexports.getAddressFromDID = dids_1.getAddressFromDID;\n\nvar keys_1 = require(\"./keys\");\n\nexports.getEntropy = keys_1.getEntropy;\nexports.makeECPrivateKey = keys_1.makeECPrivateKey;\nexports.publicKeyToAddress = keys_1.publicKeyToAddress;\nexports.getPublicKeyFromPrivate = keys_1.getPublicKeyFromPrivate;\n\nvar utils_1 = require(\"./utils\");\n\nexports.nextYear = utils_1.nextYear;\nexports.nextMonth = utils_1.nextMonth;\nexports.nextHour = utils_1.nextHour;\nexports.makeUUID4 = utils_1.makeUUID4;\nexports.updateQueryStringParameter = utils_1.updateQueryStringParameter;\nexports.isLaterVersion = utils_1.isLaterVersion;\nexports.isSameOriginAbsoluteUrl = utils_1.isSameOriginAbsoluteUrl;\nexports.hexStringToECPair = utils_1.hexStringToECPair;\nexports.ecPairToHexString = utils_1.ecPairToHexString;\nexports.ecPairToAddress = utils_1.ecPairToAddress;\n\nvar operations_1 = require(\"./operations\");\n\nexports.transactions = operations_1.transactions;\nexports.safety = operations_1.safety;\nexports.PubkeyHashSigner = operations_1.PubkeyHashSigner;\nexports.addUTXOsToFund = operations_1.addUTXOsToFund;\nexports.estimateTXBytes = operations_1.estimateTXBytes;\n\nvar wallet_1 = require(\"./wallet\");\n\nexports.BlockstackWallet = wallet_1.BlockstackWallet;\n\nvar network_1 = require(\"./network\");\n\nexports.network = network_1.network; // @ts-ignore: Could not find a declaration file for module\n\nvar jsontokens_1 = require(\"jsontokens\");\n\nexports.decodeToken = jsontokens_1.decodeToken;\n\nvar config_1 = require(\"./config\");\n\nexports.config = config_1.config;\n\nvar encryption_1 = require(\"./encryption\");\n\nexports.encryptMnemonic = encryption_1.encryptMnemonic;\nexports.decryptMnemonic = encryption_1.decryptMnemonic;\n\nvar userSession_1 = require(\"./auth/userSession\");\n\nexports.UserSession = userSession_1.UserSession;","map":null,"metadata":{},"sourceType":"script"}