{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // @ts-ignore: Could not find a declaration file for module\n\nconst inspector = require(\"schema-inspector\");\n\nconst profileTokens_1 = require(\"./profileTokens\");\n\nconst profileProofs_1 = require(\"./profileProofs\");\n\nconst profileZoneFiles_1 = require(\"./profileZoneFiles\");\n\nconst schemaDefinition = {\n  type: 'object',\n  properties: {\n    '@context': {\n      type: 'string',\n      optional: true\n    },\n    '@type': {\n      type: 'string'\n    }\n  }\n};\n/**\n * Represents a user profile\n *\n */\n\nclass Profile {\n  constructor(profile = {}) {\n    this._profile = Object.assign({}, {\n      '@context': 'http://schema.org/'\n    }, profile);\n  }\n\n  toJSON() {\n    return Object.assign({}, this._profile);\n  }\n\n  toToken(privateKey) {\n    return profileTokens_1.signProfileToken(this.toJSON(), privateKey);\n  }\n\n  static validateSchema(profile, strict = false) {\n    schemaDefinition.strict = strict;\n    return inspector.validate(schemaDefinition, profile);\n  }\n\n  static fromToken(token, publicKeyOrAddress = null) {\n    const profile = profileTokens_1.extractProfile(token, publicKeyOrAddress);\n    return new Profile(profile);\n  }\n\n  static makeZoneFile(domainName, tokenFileURL) {\n    return profileZoneFiles_1.makeProfileZoneFile(domainName, tokenFileURL);\n  }\n\n  static validateProofs(domainName) {\n    return profileProofs_1.validateProofs(new Profile().toJSON(), domainName);\n  }\n\n}\n\nexports.Profile = Profile;","map":null,"metadata":{},"sourceType":"script"}