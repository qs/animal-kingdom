{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.13\n(function () {\n  var C,\n      Pipeliner,\n      iced,\n      __iced_k,\n      __iced_k_noop,\n      _iand,\n      _ior,\n      _timeout,\n      __slice = [].slice;\n\n  __iced_k = __iced_k_noop = function () {};\n\n  C = require('./const');\n  exports.iced = iced = require('./runtime');\n\n  _timeout = function (cb, t, res, tmp) {\n    var arr, rv, timeout_obj, which, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    rv = new iced.Rendezvous();\n    tmp[0] = rv.id(true).defer({\n      assign_fn: function (_this) {\n        return function () {\n          return function () {\n            return arr = __slice.call(arguments, 0);\n          };\n        };\n      }(this)(),\n      lineno: 20,\n      context: __iced_deferrals\n    });\n    timeout_obj = setTimeout(rv.id(false).defer({\n      lineno: 21,\n      context: __iced_deferrals\n    }), t);\n    (function (_this) {\n      return function (__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/iced/iced-coffee-script/iced-runtime/src/library.iced\"\n        });\n        rv.wait(__iced_deferrals.defer({\n          assign_fn: function () {\n            return function () {\n              return which = arguments[0];\n            };\n          }(),\n          lineno: 22\n        }));\n\n        __iced_deferrals._fulfill();\n      };\n    })(this)(function (_this) {\n      return function () {\n        if (res) {\n          res[0] = which;\n        }\n\n        if (which) {\n          clearTimeout(timeout_obj);\n        }\n\n        return cb.apply(null, arr);\n      };\n    }(this));\n  };\n\n  exports.timeout = function (cb, t, res) {\n    var tmp;\n    tmp = [];\n\n    _timeout(cb, t, res, tmp);\n\n    return tmp[0];\n  };\n\n  _iand = function (cb, res, tmp) {\n    var ok, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    (function (_this) {\n      return function (__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/iced/iced-coffee-script/iced-runtime/src/library.iced\"\n        });\n        tmp[0] = __iced_deferrals.defer({\n          assign_fn: function () {\n            return function () {\n              return ok = arguments[0];\n            };\n          }(),\n          lineno: 40\n        });\n\n        __iced_deferrals._fulfill();\n      };\n    })(this)(function (_this) {\n      return function () {\n        if (!ok) {\n          res[0] = false;\n        }\n\n        return cb();\n      };\n    }(this));\n  };\n\n  exports.iand = function (cb, res) {\n    var tmp;\n    tmp = [];\n\n    _iand(cb, res, tmp);\n\n    return tmp[0];\n  };\n\n  _ior = function (cb, res, tmp) {\n    var ok, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    (function (_this) {\n      return function (__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/iced/iced-coffee-script/iced-runtime/src/library.iced\"\n        });\n        tmp[0] = __iced_deferrals.defer({\n          assign_fn: function () {\n            return function () {\n              return ok = arguments[0];\n            };\n          }(),\n          lineno: 59\n        });\n\n        __iced_deferrals._fulfill();\n      };\n    })(this)(function (_this) {\n      return function () {\n        if (ok) {\n          res[0] = true;\n        }\n\n        return cb();\n      };\n    }(this));\n  };\n\n  exports.ior = function (cb, res) {\n    var tmp;\n    tmp = [];\n\n    _ior(cb, res, tmp);\n\n    return tmp[0];\n  };\n\n  exports.Pipeliner = Pipeliner = function () {\n    function Pipeliner(window, delay) {\n      this.window = window || 1;\n      this.delay = delay || 0;\n      this.queue = [];\n      this.n_out = 0;\n      this.cb = null;\n      this[C.deferrals] = this;\n      this[\"defer\"] = this._defer;\n    }\n\n    Pipeliner.prototype.waitInQueue = function (cb) {\n      var ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      (function (_this) {\n        return function (__iced_k) {\n          var _while;\n\n          _while = function (__iced_k) {\n            var _break, _continue, _next;\n\n            _break = __iced_k;\n\n            _continue = function () {\n              return iced.trampoline(function () {\n                return _while(__iced_k);\n              });\n            };\n\n            _next = _continue;\n\n            if (!(_this.n_out >= _this.window)) {\n              return _break();\n            } else {\n              (function (__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/iced/iced-coffee-script/iced-runtime/src/library.iced\",\n                  funcname: \"Pipeliner.waitInQueue\"\n                });\n                _this.cb = __iced_deferrals.defer({\n                  lineno: 101\n                });\n\n                __iced_deferrals._fulfill();\n              })(_next);\n            }\n          };\n\n          _while(__iced_k);\n        };\n      })(this)(function (_this) {\n        return function () {\n          _this.n_out++;\n\n          (function (__iced_k) {\n            if (_this.delay) {\n              (function (__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/iced/iced-coffee-script/iced-runtime/src/library.iced\",\n                  funcname: \"Pipeliner.waitInQueue\"\n                });\n                setTimeout(__iced_deferrals.defer({\n                  lineno: 109\n                }), _this.delay);\n\n                __iced_deferrals._fulfill();\n              })(__iced_k);\n            } else {\n              return __iced_k();\n            }\n          })(function () {\n            return cb();\n          });\n        };\n      }(this));\n    };\n\n    Pipeliner.prototype.__defer = function (out, deferArgs) {\n      var tmp, voidCb, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/iced/iced-coffee-script/iced-runtime/src/library.iced\",\n            funcname: \"Pipeliner.__defer\"\n          });\n          voidCb = __iced_deferrals.defer({\n            lineno: 123\n          });\n\n          out[0] = function () {\n            var args, _ref;\n\n            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n\n            if ((_ref = deferArgs.assign_fn) != null) {\n              _ref.apply(null, args);\n            }\n\n            return voidCb();\n          };\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          _this.n_out--;\n\n          if (_this.cb) {\n            tmp = _this.cb;\n            _this.cb = null;\n            return tmp();\n          }\n        };\n      }(this));\n    };\n\n    Pipeliner.prototype._defer = function (deferArgs) {\n      var tmp;\n      tmp = [];\n\n      this.__defer(tmp, deferArgs);\n\n      return tmp[0];\n    };\n\n    Pipeliner.prototype.flush = function (autocb) {\n      var ___iced_passed_deferral, __iced_k, _while;\n\n      __iced_k = autocb;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n\n      _while = function (_this) {\n        var __iced_deferrals;\n\n        return function (__iced_k) {\n          var _break, _continue, _next;\n\n          _break = __iced_k;\n\n          _continue = function () {\n            return iced.trampoline(function () {\n              return _while(__iced_k);\n            });\n          };\n\n          _next = _continue;\n\n          if (!_this.n_out) {\n            return _break();\n          } else {\n            (function (__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/iced/iced-coffee-script/iced-runtime/src/library.iced\",\n                funcname: \"Pipeliner.flush\"\n              });\n              _this.cb = __iced_deferrals.defer({\n                lineno: 152\n              });\n\n              __iced_deferrals._fulfill();\n            })(_next);\n          }\n        };\n      }(this);\n\n      _while(__iced_k);\n    };\n\n    return Pipeliner;\n  }();\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}