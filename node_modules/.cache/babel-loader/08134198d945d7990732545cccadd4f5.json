{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var AES,\n      Base,\n      Concat,\n      Decryptor,\n      SHA512,\n      Salsa20,\n      TwoFish,\n      V,\n      WordArray,\n      ctr,\n      decrypt,\n      iced,\n      make_esc,\n      salsa20,\n      __iced_k,\n      __iced_k_noop,\n      _ref,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  iced = require('iced-runtime');\n\n  __iced_k = __iced_k_noop = function () {};\n\n  WordArray = require('./wordarray').WordArray;\n  salsa20 = require('./salsa20');\n  AES = require('./aes').AES;\n  TwoFish = require('./twofish').TwoFish;\n  ctr = require('./ctr');\n  Concat = require('./combine').Concat;\n  SHA512 = require('./sha512').SHA512;\n  Salsa20 = require('./salsa20').Salsa20;\n  _ref = require('./enc'), Base = _ref.Base, V = _ref.V;\n  make_esc = require('iced-error').make_esc;\n\n  Decryptor = function (_super) {\n    __extends(Decryptor, _super);\n\n    function Decryptor(_arg) {\n      var enc, key;\n      key = _arg.key, enc = _arg.enc;\n\n      Decryptor.__super__.constructor.call(this, {\n        key: key\n      });\n\n      if (enc != null) {\n        this.key = enc.key;\n        this.derived_keys = enc.derived_keys;\n      }\n    }\n\n    Decryptor.prototype.read_header = function (cb) {\n      var err, wa;\n      err = (wa = this.ct.unshift(2)) == null ? new Error(\"Ciphertext underrun in header\") : (this.version = V[wa.words[1]]) == null ? new Error(\"bad header; couldn't find a good version (got \" + wa.words[1] + \")\") : wa.words[0] !== this.version.header[0] ? new Error(\"Bad header: unrecognized magic value\") : null;\n      return cb(err);\n    };\n\n    Decryptor.prototype.verify_sig = function (key, cb) {\n      var computed, err, received, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      (function (_this) {\n        return function (__iced_k) {\n          if ((received = _this.ct.unshift(Concat.get_output_size() / 4)) == null) {\n            return __iced_k(err = new Error(\"Ciphertext underrun in signature\"));\n          } else {\n            (function (__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                funcname: \"Decryptor.verify_sig\"\n              });\n\n              _this.sign({\n                input: _this.ct,\n                key: key,\n                salt: _this.salt\n              }, __iced_deferrals.defer({\n                assign_fn: function () {\n                  return function () {\n                    err = arguments[0];\n                    return computed = arguments[1];\n                  };\n                }(),\n                lineno: 63\n              }));\n\n              __iced_deferrals._fulfill();\n            })(function () {\n              return __iced_k(err = err != null ? err : received.equal(computed) ? null : new Error('Signature mismatch or bad decryption key'));\n            });\n          }\n        };\n      })(this)(function (_this) {\n        return function () {\n          return cb(err);\n        };\n      }(this));\n    };\n\n    Decryptor.prototype.unshift_iv = function (n_bytes, which, cb) {\n      var err, iv;\n      err = (iv = this.ct.unshift(n_bytes / 4)) != null ? null : new Error(\"Ciphertext underrun in \" + which);\n      return cb(err, iv);\n    };\n\n    Decryptor.prototype.read_salt = function (cb) {\n      var err;\n      err = (this.salt = this.ct.unshift(this.version.salt_size / 4)) == null ? new Error(\"Ciphertext underrrun in read_salt\") : null;\n      return cb(err);\n    };\n\n    Decryptor.prototype.generate_keys = function (_arg, cb) {\n      var err, keys, progress_hook, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      progress_hook = _arg.progress_hook;\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n            funcname: \"Decryptor.generate_keys\"\n          });\n\n          _this.kdf({\n            salt: _this.salt,\n            progress_hook: progress_hook\n          }, __iced_deferrals.defer({\n            assign_fn: function () {\n              return function () {\n                err = arguments[0];\n                return keys = arguments[1];\n              };\n            }(),\n            lineno: 114\n          }));\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          return cb(err, keys);\n        };\n      }(this));\n    };\n\n    Decryptor.prototype.run = function (_arg, cb) {\n      var ct1, ct2, data, esc, iv, progress_hook, pt, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n      __iced_k = __iced_k_noop;\n      ___iced_passed_deferral = iced.findDeferral(arguments);\n      data = _arg.data, progress_hook = _arg.progress_hook;\n      esc = make_esc(cb, \"Decryptor::run\");\n      this.ct = WordArray.from_buffer(data);\n      (function (_this) {\n        return function (__iced_k) {\n          __iced_deferrals = new iced.Deferrals(__iced_k, {\n            parent: ___iced_passed_deferral,\n            filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n            funcname: \"Decryptor.run\"\n          });\n\n          _this.read_header(esc(__iced_deferrals.defer({\n            lineno: 141\n          })));\n\n          __iced_deferrals._fulfill();\n        };\n      })(this)(function (_this) {\n        return function () {\n          (function (__iced_k) {\n            __iced_deferrals = new iced.Deferrals(__iced_k, {\n              parent: ___iced_passed_deferral,\n              filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n              funcname: \"Decryptor.run\"\n            });\n\n            _this.read_salt(esc(__iced_deferrals.defer({\n              lineno: 142\n            })));\n\n            __iced_deferrals._fulfill();\n          })(function () {\n            (function (__iced_k) {\n              __iced_deferrals = new iced.Deferrals(__iced_k, {\n                parent: ___iced_passed_deferral,\n                filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                funcname: \"Decryptor.run\"\n              });\n\n              _this.generate_keys({\n                progress_hook: progress_hook\n              }, esc(__iced_deferrals.defer({\n                assign_fn: function (__slot_1) {\n                  return function () {\n                    return __slot_1.keys = arguments[0];\n                  };\n                }(_this),\n                lineno: 143\n              })));\n\n              __iced_deferrals._fulfill();\n            })(function () {\n              (function (__iced_k) {\n                __iced_deferrals = new iced.Deferrals(__iced_k, {\n                  parent: ___iced_passed_deferral,\n                  filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                  funcname: \"Decryptor.run\"\n                });\n\n                _this.verify_sig(_this.keys.hmac, esc(__iced_deferrals.defer({\n                  lineno: 144\n                })));\n\n                __iced_deferrals._fulfill();\n              })(function () {\n                (function (__iced_k) {\n                  __iced_deferrals = new iced.Deferrals(__iced_k, {\n                    parent: ___iced_passed_deferral,\n                    filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                    funcname: \"Decryptor.run\"\n                  });\n\n                  _this.unshift_iv(AES.ivSize, \"AES\", esc(__iced_deferrals.defer({\n                    assign_fn: function () {\n                      return function () {\n                        return iv = arguments[0];\n                      };\n                    }(),\n                    lineno: 145\n                  })));\n\n                  __iced_deferrals._fulfill();\n                })(function () {\n                  (function (__iced_k) {\n                    __iced_deferrals = new iced.Deferrals(__iced_k, {\n                      parent: ___iced_passed_deferral,\n                      filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                      funcname: \"Decryptor.run\"\n                    });\n\n                    _this.run_aes({\n                      iv: iv,\n                      input: _this.ct,\n                      key: _this.keys.aes,\n                      progress_hook: progress_hook\n                    }, esc(__iced_deferrals.defer({\n                      assign_fn: function () {\n                        return function () {\n                          return ct2 = arguments[0];\n                        };\n                      }(),\n                      lineno: 146\n                    })));\n\n                    __iced_deferrals._fulfill();\n                  })(function () {\n                    (function (__iced_k) {\n                      __iced_deferrals = new iced.Deferrals(__iced_k, {\n                        parent: ___iced_passed_deferral,\n                        filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                        funcname: \"Decryptor.run\"\n                      });\n\n                      _this.unshift_iv(TwoFish.ivSize, \"2fish\", esc(__iced_deferrals.defer({\n                        assign_fn: function () {\n                          return function () {\n                            return iv = arguments[0];\n                          };\n                        }(),\n                        lineno: 147\n                      })));\n\n                      __iced_deferrals._fulfill();\n                    })(function () {\n                      (function (__iced_k) {\n                        __iced_deferrals = new iced.Deferrals(__iced_k, {\n                          parent: ___iced_passed_deferral,\n                          filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                          funcname: \"Decryptor.run\"\n                        });\n\n                        _this.run_twofish({\n                          iv: iv,\n                          input: _this.ct,\n                          key: _this.keys.twofish,\n                          progress_hook: progress_hook\n                        }, esc(__iced_deferrals.defer({\n                          assign_fn: function () {\n                            return function () {\n                              return ct1 = arguments[0];\n                            };\n                          }(),\n                          lineno: 148\n                        })));\n\n                        __iced_deferrals._fulfill();\n                      })(function () {\n                        (function (__iced_k) {\n                          __iced_deferrals = new iced.Deferrals(__iced_k, {\n                            parent: ___iced_passed_deferral,\n                            filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                            funcname: \"Decryptor.run\"\n                          });\n\n                          _this.unshift_iv(Salsa20.ivSize, \"Salsa\", esc(__iced_deferrals.defer({\n                            assign_fn: function () {\n                              return function () {\n                                return iv = arguments[0];\n                              };\n                            }(),\n                            lineno: 149\n                          })));\n\n                          __iced_deferrals._fulfill();\n                        })(function () {\n                          (function (__iced_k) {\n                            __iced_deferrals = new iced.Deferrals(__iced_k, {\n                              parent: ___iced_passed_deferral,\n                              filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\",\n                              funcname: \"Decryptor.run\"\n                            });\n\n                            _this.run_salsa20({\n                              iv: iv,\n                              input: _this.ct,\n                              key: _this.keys.salsa20,\n                              output_iv: false,\n                              progress_hook: progress_hook\n                            }, esc(__iced_deferrals.defer({\n                              assign_fn: function () {\n                                return function () {\n                                  return pt = arguments[0];\n                                };\n                              }(),\n                              lineno: 150\n                            })));\n\n                            __iced_deferrals._fulfill();\n                          })(function () {\n                            return cb(null, pt.to_buffer());\n                          });\n                        });\n                      });\n                    });\n                  });\n                });\n              });\n            });\n          });\n        };\n      }(this));\n    };\n\n    Decryptor.prototype.clone = function () {\n      var ret, _ref1;\n\n      ret = new Decryptor({\n        key: (_ref1 = this.key) != null ? _ref1.to_buffer() : void 0,\n        rng: this.rng,\n        version: this.version\n      });\n      ret.derived_keys = this.clone_derived_keys();\n      return ret;\n    };\n\n    return Decryptor;\n  }(Base);\n\n  decrypt = function (_arg, cb) {\n    var data, dec, err, key, progress_hook, pt, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    key = _arg.key, data = _arg.data, progress_hook = _arg.progress_hook;\n    dec = new Decryptor({\n      key: key\n    });\n    (function (_this) {\n      return function (__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/keybase/triplesec/src/dec.iced\"\n        });\n        dec.run({\n          data: data,\n          progress_hook: progress_hook\n        }, __iced_deferrals.defer({\n          assign_fn: function () {\n            return function () {\n              err = arguments[0];\n              return pt = arguments[1];\n            };\n          }(),\n          lineno: 180\n        }));\n\n        __iced_deferrals._fulfill();\n      };\n    })(this)(function (_this) {\n      return function () {\n        dec.scrub();\n        return cb(err, pt);\n      };\n    }(this));\n  };\n\n  exports.Decryptor = Decryptor;\n  exports.decrypt = decrypt;\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}