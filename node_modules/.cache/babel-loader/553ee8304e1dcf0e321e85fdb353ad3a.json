{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction makeConverter(TYPE_BYTE) {\n  function decode(keyVal) {\n    if (keyVal.key[0] !== TYPE_BYTE) {\n      throw new Error('Decode Error: could not decode witnessScript with key 0x' + keyVal.key.toString('hex'));\n    }\n\n    return keyVal.value;\n  }\n\n  function encode(data) {\n    const key = Buffer.from([TYPE_BYTE]);\n    return {\n      key,\n      value: data\n    };\n  }\n\n  const expected = 'Buffer';\n\n  function check(data) {\n    return Buffer.isBuffer(data);\n  }\n\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.witnessScript === undefined;\n  }\n\n  return {\n    decode,\n    encode,\n    check,\n    expected,\n    canAdd\n  };\n}\n\nexports.makeConverter = makeConverter;","map":null,"metadata":{},"sourceType":"script"}