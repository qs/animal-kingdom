{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Projects/hacksupply/animal-kingdom-master/src/EditMe.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './EditMe.css';\nimport Card from './Card';\nimport { ANIMALS, TERRITORIES, ME_FILENAME } from './constants';\n\nclass EditMe extends Component {\n  constructor(props) {\n    super(props);\n    this.selectAnimal = this.selectAnimal.bind(this);\n    this.selectTerritory = this.selectTerritory.bind(this);\n    this.state = {\n      selectedAnimal: false,\n      selectedTerritory: false\n    };\n    this.loadMe = this.loadMe.bind(this);\n  }\n\n  componentWillMount() {\n    this.loadMe();\n  }\n\n  loadMe() {\n    if (this.props.me) {\n      this.setState({\n        selectedAnimal: true,\n        selectedTerritory: true\n      });\n    } else {\n      this.setState({\n        selectedAnimal: false,\n        selectedTerritory: false\n      });\n    }\n  }\n\n  selectAnimal(e, animal) {\n    e.preventDefault();\n    this.setState({\n      selectedAnimal: true\n    });\n    this.props.saveMe(Object.assign({}, this.props.me, {\n      animal\n    }));\n  }\n\n  selectTerritory(e, territory) {\n    e.preventDefault();\n    this.setState({\n      selectedTerritory: true\n    });\n    this.props.saveMe(Object.assign({}, this.props.me, {\n      territory\n    }));\n  }\n\n  render() {\n    const me = this.props.me;\n    let myAnimal = null;\n    let myTerritory = null;\n\n    if (me) {\n      myAnimal = this.props.me.animal;\n      myTerritory = this.props.me.territory;\n    }\n\n    const selectedAnimal = this.state.selectedAnimal;\n    const selectedTerritory = this.state.selectedTerritory;\n    const completed = selectedAnimal && selectedTerritory;\n    const username = this.props.username;\n    return React.createElement(\"div\", {\n      className: \"EditMe container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Your animal persona\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"You are the ruler of your kingdom! Pick your animal persona and its home!\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Select your animal\"), React.createElement(\"div\", {\n      className: \"row card-deck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, ANIMALS.map((animal, index) => {\n      const selected = myAnimal && myAnimal.id === animal.id;\n      return React.createElement(Card, {\n        path: \"/animals/\",\n        key: index,\n        item: animal,\n        select: this.selectAnimal,\n        selected: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    })), React.createElement(\"h3\", {\n      className: \"select-territory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Select your territory\"), React.createElement(\"div\", {\n      className: \"card-deck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, TERRITORIES.map((territory, index) => {\n      const selected = myTerritory && myTerritory.id === territory.id;\n      return React.createElement(Card, {\n        path: \"/territories/\",\n        key: index,\n        item: territory,\n        select: this.selectTerritory,\n        selected: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"container row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-12 done\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: completed ? \"/kingdom/\".concat(username) : \"/me\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Done\")))));\n  }\n\n}\n\nexport default EditMe;","map":{"version":3,"sources":["/home/ivan/Projects/hacksupply/animal-kingdom-master/src/EditMe.js"],"names":["React","Component","Link","Card","ANIMALS","TERRITORIES","ME_FILENAME","EditMe","constructor","props","selectAnimal","bind","selectTerritory","state","selectedAnimal","selectedTerritory","loadMe","componentWillMount","me","setState","e","animal","preventDefault","saveMe","Object","assign","territory","render","myAnimal","myTerritory","completed","username","map","index","selected","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './EditMe.css'\nimport Card from './Card'\nimport { ANIMALS, TERRITORIES, ME_FILENAME } from './constants'\n\nclass EditMe extends Component {\n\n  constructor(props) {\n    super(props)\n    this.selectAnimal = this.selectAnimal.bind(this)\n    this.selectTerritory = this.selectTerritory.bind(this)\n\n    this.state = {\n      selectedAnimal: false,\n      selectedTerritory: false\n    }\n    \n    this.loadMe = this.loadMe.bind(this)\n\n  }\n\n  componentWillMount() {\n    this.loadMe()\n  }\n\n  loadMe() {\n    if(this.props.me) {\n        this.setState({selectedAnimal: true, selectedTerritory: true})\n      } else {\n        this.setState({selectedAnimal: false, selectedTerritory: false})\n      }\n  }\n  \n\n  selectAnimal(e, animal) {\n    e.preventDefault()\n    this.setState({selectedAnimal: true})\n    this.props.saveMe(Object.assign({}, this.props.me, { animal }))\n  }\n\n  selectTerritory(e, territory) {\n    e.preventDefault()\n    this.setState({selectedTerritory: true})\n    this.props.saveMe(Object.assign({}, this.props.me, { territory }))\n  }\n\n\n  render() {\n    const me = this.props.me\n    let myAnimal = null\n    let myTerritory = null\n    if (me) {\n      myAnimal = this.props.me.animal\n      myTerritory = this.props.me.territory\n    }\n    const selectedAnimal = this.state.selectedAnimal \n    const selectedTerritory = this.state.selectedTerritory\n    const completed = selectedAnimal && selectedTerritory\n    const username = this.props.username\n\n    return (\n      <div className=\"EditMe container\">\n      <h2>Your animal persona</h2>\n      <p>You are the ruler of your kingdom! Pick your animal persona and its home!</p>\n        <h3>Select your animal</h3>\n        <div className=\"row card-deck\">\n        { ANIMALS.map((animal, index) => {\n          const selected = myAnimal && myAnimal.id === animal.id\n          return (\n            <Card path='/animals/' key={index} item={animal} select={this.selectAnimal} selected={selected} />\n                )\n          })\n        }\n        </div>\n        <h3 className=\"select-territory\">Select your territory</h3>\n        <div className=\"card-deck\">\n        { TERRITORIES.map((territory, index) => {\n          const selected = myTerritory && myTerritory.id === territory.id\n          return (\n            <Card path='/territories/' key={index} item={territory} select={this.selectTerritory} selected={selected} />\n                )\n          })\n        }\n        </div>\n        <div className=\"container row\">\n          <div className=\"col-lg-12 done\">\n            <p>\n              <Link to={completed?`/kingdom/${username}`:`/me`} \n                    className=\"btn btn-primary\">Done</Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default EditMe\n"]},"metadata":{},"sourceType":"module"}