{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst base64url_1 = __importDefault(require(\"base64url\"));\n\nfunction decodeToken(token) {\n  if (typeof token === 'string') {\n    // decompose the token into parts\n    const tokenParts = token.split('.');\n    const header = JSON.parse(base64url_1.default.decode(tokenParts[0]));\n    const payload = JSON.parse(base64url_1.default.decode(tokenParts[1]));\n    const signature = tokenParts[2]; // return the token object\n\n    return {\n      header: header,\n      payload: payload,\n      signature: signature\n    };\n  } else if (typeof token === 'object') {\n    if (typeof token.payload !== 'string') {\n      throw new Error('Expected token payload to be a base64 or json string');\n    }\n\n    let payload = token.payload;\n\n    if (token.payload[0] !== '{') {\n      payload = base64url_1.default.decode(payload);\n    }\n\n    const allHeaders = [];\n    token.header.map(headerValue => {\n      const header = JSON.parse(base64url_1.default.decode(headerValue));\n      allHeaders.push(header);\n    });\n    return {\n      header: allHeaders,\n      payload: JSON.parse(payload),\n      signature: token.signature\n    };\n  }\n}\n\nexports.decodeToken = decodeToken;","map":null,"metadata":{},"sourceType":"script"}