{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var HMAC,\n      HMAC_SHA256,\n      SHA256,\n      SHA512,\n      bulk_sign,\n      iced,\n      sign,\n      util,\n      __iced_k,\n      __iced_k_noop,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  iced = require('iced-runtime');\n\n  __iced_k = __iced_k_noop = function () {};\n\n  SHA512 = require('./sha512').SHA512;\n  SHA256 = require('./sha256').SHA256;\n  util = require('./util');\n\n  HMAC = function () {\n    HMAC.outputSize = 512 / 8;\n    HMAC.prototype.outputSize = HMAC.outputSize;\n\n    function HMAC(key, klass) {\n      var i, _i, _ref;\n\n      if (klass == null) {\n        klass = SHA512;\n      }\n\n      this.key = key.clone();\n      this.hasher = new klass();\n      this.hasherBlockSize = this.hasher.blockSize;\n      this.hasherBlockSizeBytes = this.hasherBlockSize * 4;\n\n      if (this.key.sigBytes > this.hasherBlockSizeBytes) {\n        this.key = this.hasher.finalize(this.key);\n      }\n\n      this.key.clamp();\n      this._oKey = this.key.clone();\n      this._iKey = this.key.clone();\n\n      for (i = _i = 0, _ref = this.hasherBlockSize; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n        this._oKey.words[i] ^= 0x5c5c5c5c;\n        this._iKey.words[i] ^= 0x36363636;\n      }\n\n      this._oKey.sigBytes = this._iKey.sigBytes = this.hasherBlockSizeBytes;\n      this.reset();\n    }\n\n    HMAC.prototype.get_output_size = function () {\n      return this.hasher.output_size;\n    };\n\n    HMAC.prototype.reset = function () {\n      return this.hasher.reset().update(this._iKey);\n    };\n\n    HMAC.prototype.update = function (wa) {\n      this.hasher.update(wa);\n      return this;\n    };\n\n    HMAC.prototype.finalize = function (wa) {\n      var innerHash, innerHash2, out;\n      innerHash = this.hasher.finalize(wa);\n      this.hasher.reset();\n      innerHash2 = this._oKey.clone().concat(innerHash);\n      out = this.hasher.finalize(innerHash2);\n      innerHash.scrub();\n      innerHash2.scrub();\n      return out;\n    };\n\n    HMAC.prototype.scrub = function () {\n      this.key.scrub();\n\n      this._iKey.scrub();\n\n      return this._oKey.scrub();\n    };\n\n    return HMAC;\n  }();\n\n  sign = function (_arg) {\n    var eng, hash_class, input, key, out;\n    key = _arg.key, input = _arg.input, hash_class = _arg.hash_class;\n    eng = new HMAC(key, hash_class);\n    out = eng.finalize(input.clamp());\n    eng.scrub();\n    return out;\n  };\n\n  bulk_sign = function (_arg, cb) {\n    var eng, input, key, klass, progress_hook, res, slice_args, what, ___iced_passed_deferral, __iced_deferrals, __iced_k;\n\n    __iced_k = __iced_k_noop;\n    ___iced_passed_deferral = iced.findDeferral(arguments);\n    key = _arg.key, input = _arg.input, progress_hook = _arg.progress_hook, klass = _arg.klass, what = _arg.what;\n    klass || (klass = HMAC);\n    what || (what = \"hmac_sha512\");\n    eng = new klass(key);\n    input.clamp();\n    slice_args = {\n      update: function (lo, hi) {\n        return eng.update(input.slice(lo, hi));\n      },\n      finalize: function () {\n        return eng.finalize();\n      },\n      default_n: eng.hasherBlockSize * 1000\n    };\n    (function (_this) {\n      return function (__iced_k) {\n        __iced_deferrals = new iced.Deferrals(__iced_k, {\n          parent: ___iced_passed_deferral,\n          filename: \"/Users/max/src/keybase/triplesec/src/hmac.iced\"\n        });\n        util.bulk(input.sigBytes, slice_args, {\n          what: what,\n          progress_hook: progress_hook,\n          cb: __iced_deferrals.defer({\n            assign_fn: function () {\n              return function () {\n                return res = arguments[0];\n              };\n            }(),\n            lineno: 137\n          })\n        });\n\n        __iced_deferrals._fulfill();\n      };\n    })(this)(function (_this) {\n      return function () {\n        eng.scrub();\n        return cb(res);\n      };\n    }(this));\n  };\n\n  exports.HMAC_SHA256 = HMAC_SHA256 = function (_super) {\n    __extends(HMAC_SHA256, _super);\n\n    function HMAC_SHA256(key) {\n      HMAC_SHA256.__super__.constructor.call(this, key, SHA256);\n    }\n\n    return HMAC_SHA256;\n  }(HMAC);\n\n  exports.HMAC = HMAC;\n  exports.sign = sign;\n  exports.bulk_sign = bulk_sign;\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}