{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst errors_1 = require(\"../errors\");\n\nconst SESSION_VERSION = '1.0.0';\n/**\n * @ignore\n */\n\nclass SessionData {\n  constructor(options) {\n    this.version = SESSION_VERSION;\n    this.appPrivateKey = options.appPrivateKey;\n    this.identityAddress = options.identityAddress;\n    this.username = options.username;\n    this.coreNode = options.coreNode;\n    this.hubUrl = options.hubUrl;\n    this.userData = options.userData;\n    this.transitKey = options.transitKey;\n  }\n\n  getGaiaHubConfig() {\n    return this.userData && this.userData.gaiaHubConfig;\n  }\n\n  setGaiaHubConfig(config) {\n    this.userData.gaiaHubConfig = config;\n  }\n\n  static fromJSON(json) {\n    if (json.version !== SESSION_VERSION) {\n      throw new errors_1.InvalidStateError(\"JSON data version \".concat(json.version, \" not supported by SessionData\"));\n    }\n\n    const options = {\n      appPrivateKey: json.appPrivateKey,\n      identityAddress: json.identityAddress,\n      username: json.username,\n      coreNode: json.coreNode,\n      hubUrl: json.hubUrl,\n      userData: json.userData,\n      transitKey: json.transitKey\n    };\n    return new SessionData(options);\n  }\n\n  toString() {\n    return JSON.stringify(this);\n  }\n\n}\n\nexports.SessionData = SessionData;","map":null,"metadata":{},"sourceType":"script"}