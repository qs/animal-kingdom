{"ast":null,"code":"var _jsxFileName = \"/home/ivan/Projects/hacksupply/animal-kingdom-master/src/OtherKingdoms.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserSession } from 'blockstack';\nimport { appConfig, OTHER_KINGDOMS } from './constants';\nimport { loadRuler, loadSubjects } from './utils';\n\nclass OtherKingdoms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      kingdoms: []\n    };\n    this.userSession = new UserSession({\n      appConfig\n    });\n    this.resolveKingdoms = this.resolveKingdoms.bind(this);\n  }\n\n  componentWillMount() {\n    this.resolveKingdoms();\n  }\n\n  resolveKingdoms() {\n    const kingdoms = this.state.kingdoms;\n    OTHER_KINGDOMS.map((kingdom, index) => {\n      return loadRuler(this.userSession, kingdom.ruler, kingdom.app).then(ruler => {\n        kingdoms[index] = {\n          ruler: {\n            username: kingdom.ruler,\n            data: ruler\n          },\n          subjects: [],\n          app: kingdom.app\n        };\n        this.setState({\n          kingdoms\n        });\n        return loadSubjects(this.userSession, kingdom.ruler, kingdom.app).then(subjects => {\n          kingdoms[index].subjects = subjects;\n          this.setState({\n            subjects\n          });\n        }).catch(error => {\n          console.log('problem loading subjects');\n          console.log(error);\n          kingdoms[index].subjects = [];\n          kingdoms[index].error = true;\n          this.setState({\n            kingdom\n          });\n        });\n      }).catch(error => {\n        console.log('ruler not found');\n        console.log(error);\n        kingdoms[index] = {\n          error: true,\n          ruler: {\n            username: kingdom.ruler,\n            data: null\n          },\n          subjects: [],\n          app: kingdom.app\n        };\n      });\n    });\n  }\n\n  render() {\n    const kingdoms = this.state.kingdoms;\n    return React.createElement(\"div\", {\n      className: \"OtherKingdoms container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Other kingdoms\"), React.createElement(\"div\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, kingdoms.length === 0 ? React.createElement(\"div\", {\n      className: \"list-group-item list-group-item-action flex-column align-items-start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"d-flex w-100 justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      class: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Loading other kingdoms...\")), React.createElement(\"p\", {\n      class: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"\\xA0\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, kingdoms.map((kingdom, index) => {\n      const protocol = kingdom.app.split('//')[0];\n      const hostname = kingdom.app.split('//')[1];\n      const planet = kingdom.app;\n      const ruler = kingdom.error ? '' : kingdom.ruler;\n      const data = ruler ? ruler.data : '';\n      const animal = data ? data.animal : '';\n\n      if (kingdom.error) {\n        return React.createElement(\"div\", {\n          className: \"list-group-item list-group-item-action flex-column align-items-start\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"d-flex w-100 justify-content-between\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          class: \"mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, kingdom.ruler.username, \"'s kingdom can't be reached\")), React.createElement(\"p\", {\n          class: \"mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Is the kingdom \", planet, \" under siege?\"));\n      } else {\n        return React.createElement(Link, {\n          className: \"list-group-item list-group-item-action flex-column align-items-start\",\n          to: \"/kingdom/\".concat(protocol, \"/\").concat(hostname, \"/\").concat(kingdom.ruler.username),\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          class: \"d-flex w-100 justify-content-between\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          class: \"mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Ruler \", kingdom.ruler.username, \" the \", animal ? animal.name : '', \"'s kingdom:\"), React.createElement(\"span\", {\n          class: \"badge badge-primary badge-pill\",\n          title: \"Subjects\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, kingdom.subjects.length)), React.createElement(\"p\", {\n          class: \"mb-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Is here: \", planet));\n      }\n    }))));\n  }\n\n}\n\nexport default OtherKingdoms;","map":{"version":3,"sources":["/home/ivan/Projects/hacksupply/animal-kingdom-master/src/OtherKingdoms.js"],"names":["React","Component","Link","UserSession","appConfig","OTHER_KINGDOMS","loadRuler","loadSubjects","OtherKingdoms","constructor","props","state","kingdoms","userSession","resolveKingdoms","bind","componentWillMount","map","kingdom","index","ruler","app","then","username","data","subjects","setState","catch","error","console","log","render","length","protocol","split","hostname","planet","animal","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { UserSession } from 'blockstack'\nimport { appConfig, OTHER_KINGDOMS } from './constants'\nimport { loadRuler, loadSubjects } from './utils'\n\nclass OtherKingdoms extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      kingdoms: []\n    }\n    this.userSession = new UserSession({ appConfig })\n    this.resolveKingdoms = this.resolveKingdoms.bind(this)\n  }\n\n  componentWillMount() {\n    this.resolveKingdoms()\n  }\n\n  resolveKingdoms() {\n    const kingdoms = this.state.kingdoms\n    OTHER_KINGDOMS.map((kingdom, index) => {\n      return loadRuler(this.userSession, kingdom.ruler, kingdom.app)\n      .then(ruler => {\n        kingdoms[index] = {\n          ruler: {\n            username: kingdom.ruler,\n            data: ruler\n          },\n          subjects: [],\n          app: kingdom.app\n        }\n\n        this.setState({ kingdoms })\n        return loadSubjects(this.userSession, kingdom.ruler, kingdom.app)\n        .then(subjects => {\n            kingdoms[index].subjects = subjects\n            this.setState({ subjects })\n        })\n        .catch(error => {\n          console.log('problem loading subjects')\n          console.log(error)\n          kingdoms[index].subjects = []\n          kingdoms[index].error = true\n          this.setState({ kingdom })\n        })\n      })\n      .catch((error) => {\n        console.log('ruler not found')\n        console.log(error)\n        kingdoms[index] = {\n          error: true,\n          ruler: {\n            username: kingdom.ruler,\n            data: null,\n          },\n          subjects: [],\n          app: kingdom.app\n        }\n      })\n    })\n  }\n\n  render() {\n    const kingdoms = this.state.kingdoms\n    return (\n      <div className=\"OtherKingdoms container\">\n          <h2>Other kingdoms</h2>\n          <div className=\"list-group\">\n          {kingdoms.length === 0 ?\n            <div\n              className=\"list-group-item list-group-item-action flex-column align-items-start\"\n            >\n              <div class=\"d-flex w-100 justify-content-between\">\n                <h5 class=\"mb-1\">Loading other kingdoms...</h5>\n              </div>\n              <p class=\"mb-1\">&nbsp;</p>\n            </div>\n            :\n            <div>\n            {kingdoms.map((kingdom, index) => {\n              const protocol = kingdom.app.split('//')[0]\n              const hostname = kingdom.app.split('//')[1]\n              const planet = kingdom.app\n              const ruler = kingdom.error ? '' : kingdom.ruler\n              const data = ruler ? ruler.data : ''\n              const animal = data ? data.animal : ''\n              if (kingdom.error) {\n                return (\n                  <div\n                    className=\"list-group-item list-group-item-action flex-column align-items-start\"\n                    key={index}\n                  >\n                    <div class=\"d-flex w-100 justify-content-between\">\n                      <h5 class=\"mb-1\">{ kingdom.ruler.username }'s kingdom can't be reached</h5>\n                    </div>\n                    <p class=\"mb-1\">Is the kingdom { planet } under siege?</p>\n                  </div>\n                )\n              } else {\n                return (\n                  <Link\n                    className=\"list-group-item list-group-item-action flex-column align-items-start\"\n                    to={`/kingdom/${protocol}/${hostname}/${kingdom.ruler.username}`}\n                    key={index}\n                  >\n                    <div class=\"d-flex w-100 justify-content-between\">\n                      <h5 class=\"mb-1\">Ruler { kingdom.ruler.username } the { animal ? animal.name : '' }'s kingdom:</h5>\n                      <span class=\"badge badge-primary badge-pill\" title=\"Subjects\">{ kingdom.subjects.length }</span>\n                    </div>\n                    <p class=\"mb-1\">Is here: { planet }</p>\n                  </Link>\n                )\n              }\n            })}\n            </div>\n          }\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default OtherKingdoms"]},"metadata":{},"sourceType":"module"}