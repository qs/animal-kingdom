{"ast":null,"code":"// Generated by IcedCoffeeScript 108.0.8\n(function () {\n  var Global,\n      Hasher,\n      SHA512,\n      X64Word,\n      X64WordArray,\n      glbl,\n      _ref,\n      __hasProp = {}.hasOwnProperty,\n      __extends = function (child, parent) {\n    for (var key in parent) {\n      if (__hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  };\n\n  _ref = require('./wordarray'), X64Word = _ref.X64Word, X64WordArray = _ref.X64WordArray;\n  Hasher = require('./algbase').Hasher;\n\n  Global = function () {\n    Global.convert = function (raw) {\n      var i, _i, _ref1, _results;\n\n      _results = [];\n\n      for (i = _i = 0, _ref1 = raw.length; _i < _ref1; i = _i += 2) {\n        _results.push(new X64Word(raw[i], raw[i + 1]));\n      }\n\n      return _results;\n    };\n\n    Global.prototype.convert = function (raw) {\n      return Global.convert(raw);\n    };\n\n    function Global() {\n      var i;\n      this.K = this.convert([0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817]);\n      this.I = new X64WordArray(this.convert([0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179]));\n\n      this.W = function () {\n        var _i, _results;\n\n        _results = [];\n\n        for (i = _i = 0; _i < 80; i = ++_i) {\n          _results.push(new X64Word(0, 0));\n        }\n\n        return _results;\n      }();\n    }\n\n    return Global;\n  }();\n\n  exports.Global = Global;\n  glbl = new Global();\n\n  exports.SHA512 = SHA512 = function (_super) {\n    __extends(SHA512, _super);\n\n    function SHA512() {\n      return SHA512.__super__.constructor.apply(this, arguments);\n    }\n\n    SHA512.blockSize = 1024 / 32;\n    SHA512.prototype.blockSize = SHA512.blockSize;\n    SHA512.output_size = 512 / 8;\n    SHA512.prototype.output_size = SHA512.output_size;\n\n    SHA512.prototype._doReset = function () {\n      return this._hash = glbl.I.clone();\n    };\n\n    SHA512.prototype._doProcessBlock = function (M, offset) {\n      var H, H0, H0h, H0l, H1, H1h, H1l, H2, H2h, H2l, H3, H3h, H3l, H4, H4h, H4l, H5, H5h, H5l, H6, H6h, H6l, H7, H7h, H7l, Ki, Kih, Kil, W, Wi, Wi16, Wi16h, Wi16l, Wi7, Wi7h, Wi7l, Wih, Wil, ah, al, bh, bl, ch, chh, chl, cl, dh, dl, eh, el, fh, fl, gamma0h, gamma0l, gamma0x, gamma0xh, gamma0xl, gamma1h, gamma1l, gamma1x, gamma1xh, gamma1xl, gh, gl, hh, hl, i, majh, majl, sigma0h, sigma0l, sigma1h, sigma1l, t1h, t1l, t2h, t2l, _i;\n\n      H = this._hash.words;\n      W = glbl.W;\n      H0 = H[0];\n      H1 = H[1];\n      H2 = H[2];\n      H3 = H[3];\n      H4 = H[4];\n      H5 = H[5];\n      H6 = H[6];\n      H7 = H[7];\n      H0h = H0.high;\n      H0l = H0.low;\n      H1h = H1.high;\n      H1l = H1.low;\n      H2h = H2.high;\n      H2l = H2.low;\n      H3h = H3.high;\n      H3l = H3.low;\n      H4h = H4.high;\n      H4l = H4.low;\n      H5h = H5.high;\n      H5l = H5.low;\n      H6h = H6.high;\n      H6l = H6.low;\n      H7h = H7.high;\n      H7l = H7.low;\n      ah = H0h;\n      al = H0l;\n      bh = H1h;\n      bl = H1l;\n      ch = H2h;\n      cl = H2l;\n      dh = H3h;\n      dl = H3l;\n      eh = H4h;\n      el = H4l;\n      fh = H5h;\n      fl = H5l;\n      gh = H6h;\n      gl = H6l;\n      hh = H7h;\n      hl = H7l;\n\n      for (i = _i = 0; _i < 80; i = ++_i) {\n        Wi = W[i];\n\n        if (i < 16) {\n          Wih = Wi.high = M[offset + i * 2] | 0;\n          Wil = Wi.low = M[offset + i * 2 + 1] | 0;\n        } else {\n          gamma0x = W[i - 15];\n          gamma0xh = gamma0x.high;\n          gamma0xl = gamma0x.low;\n          gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;\n          gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);\n          gamma1x = W[i - 2];\n          gamma1xh = gamma1x.high;\n          gamma1xl = gamma1x.low;\n          gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;\n          gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);\n          Wi7 = W[i - 7];\n          Wi7h = Wi7.high;\n          Wi7l = Wi7.low;\n          Wi16 = W[i - 16];\n          Wi16h = Wi16.high;\n          Wi16l = Wi16.low;\n          Wil = gamma0l + Wi7l;\n          Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);\n          Wil = Wil + gamma1l;\n          Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);\n          Wil = Wil + Wi16l;\n          Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);\n          Wi.high = Wih;\n          Wi.low = Wil;\n        }\n\n        chh = eh & fh ^ ~eh & gh;\n        chl = el & fl ^ ~el & gl;\n        majh = ah & bh ^ ah & ch ^ bh & ch;\n        majl = al & bl ^ al & cl ^ bl & cl;\n        sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);\n        sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);\n        sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);\n        sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);\n        Ki = glbl.K[i];\n        Kih = Ki.high;\n        Kil = Ki.low;\n        t1l = hl + sigma1l;\n        t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);\n        t1l = t1l + chl;\n        t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);\n        t1l = t1l + Kil;\n        t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);\n        t1l = t1l + Wil;\n        t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);\n        t2l = sigma0l + majl;\n        t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);\n        hh = gh;\n        hl = gl;\n        gh = fh;\n        gl = fl;\n        fh = eh;\n        fl = el;\n        el = dl + t1l | 0;\n        eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;\n        dh = ch;\n        dl = cl;\n        ch = bh;\n        cl = bl;\n        bh = ah;\n        bl = al;\n        al = t1l + t2l | 0;\n        ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;\n      }\n\n      H0l = H0.low = H0l + al;\n      H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);\n      H1l = H1.low = H1l + bl;\n      H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);\n      H2l = H2.low = H2l + cl;\n      H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);\n      H3l = H3.low = H3l + dl;\n      H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);\n      H4l = H4.low = H4l + el;\n      H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);\n      H5l = H5.low = H5l + fl;\n      H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);\n      H6l = H6.low = H6l + gl;\n      H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);\n      H7l = H7.low = H7l + hl;\n      return H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);\n    };\n\n    SHA512.prototype._doFinalize = function () {\n      var dataWords, nBitsLeft, nBitsTotal;\n      dataWords = this._data.words;\n      nBitsTotal = this._nDataBytes * 8;\n      nBitsLeft = this._data.sigBytes * 8;\n      dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;\n      dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n      dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;\n      this._data.sigBytes = dataWords.length * 4;\n\n      this._process();\n\n      return this._hash.toX32();\n    };\n\n    SHA512.prototype.copy_to = function (obj) {\n      SHA512.__super__.copy_to.call(this, obj);\n\n      return obj._hash = this._hash.clone();\n    };\n\n    SHA512.prototype.clone = function () {\n      var out;\n      out = new SHA512();\n      this.copy_to(out);\n      return out;\n    };\n\n    return SHA512;\n  }(Hasher);\n\n  exports.transform = function (x) {\n    var out;\n    out = new SHA512().finalize(x);\n    x.scrub();\n    return out;\n  };\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}