{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst config_1 = require(\"./config\");\n\nconst levels = ['debug', 'info', 'warn', 'error', 'none'];\nconst levelToInt = {};\nconst intToLevel = {};\n\nfor (let index = 0; index < levels.length; index++) {\n  const level = levels[index];\n  levelToInt[level] = index;\n  intToLevel[index] = level;\n}\n/**\n* @ignore\n*/\n\n\nclass Logger {\n  static error(message) {\n    if (!this.shouldLog('error')) return;\n    console.error(this.logMessage('error', message));\n  }\n\n  static warn(message) {\n    if (!this.shouldLog('warn')) return;\n    console.warn(this.logMessage('warn', message));\n  }\n\n  static info(message) {\n    if (!this.shouldLog('info')) return;\n    console.log(this.logMessage('info', message));\n  }\n\n  static debug(message) {\n    if (!this.shouldLog('debug')) return;\n    console.log(this.logMessage('debug', message));\n  }\n\n  static logMessage(level, message) {\n    return \"[\".concat(level.toUpperCase(), \"] \").concat(message);\n  }\n\n  static shouldLog(level) {\n    const currentLevel = levelToInt[config_1.config.logLevel];\n    return currentLevel <= levelToInt[level];\n  }\n\n}\n\nexports.Logger = Logger;","map":null,"metadata":{},"sourceType":"script"}